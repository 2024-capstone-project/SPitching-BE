name: Deploy to Amazon EC2

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: djj-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: djj-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: djj-codedeploy-deployment-group
  APPLICATION: ${{ secrets.APPLICATION }}

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2. JDK 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. application.yml 생성
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{env.APPLICATION}}" > ./src/main/resources/application.yml
      - uses: actions/upload-artifact@v4
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

      # 5. Gradle 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: clean build -x test

      # 6. 빌드 결과물 확인
      - name: List build artifacts
        run: |
          echo "Build directory contents:"
          ls -la build/libs/

      # 7. AWS 자격 증명 구성
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 8. S3에 업로드
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
            --source .

      # 9. EC2에 배포
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip